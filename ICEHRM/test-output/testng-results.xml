<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="10" ignored="0" total="67" passed="57">
  <reporter-output>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_21_59_43.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_07_58.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_08_27.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_08_53.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_09_24.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_09_55.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_10_26.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployeeDataDownLoad2019_05_02_22_10_56.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployeeDelete2019_05_02_22_11_23.png]]>
    </line>
    <line>
      <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployeeDelete2019_05_02_22_13_09.png]]>
    </line>
  </reporter-output>
  <suite name="example suite 1" duration-ms="1824008" started-at="2019-02-05T16:13:10Z" finished-at="2019-02-05T16:43:34Z">
    <groups>
    </groups>
    <test name="exampletest1" duration-ms="56213" started-at="2019-02-05T16:13:10Z" finished-at="2019-02-05T16:14:06Z">
      <class name="sprint0.UserLogin">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="beforeTest" is-config="true" duration-ms="646" started-at="2019-02-05T16:13:10Z" finished-at="2019-02-05T16:13:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="beforeMethod" is-config="true" duration-ms="7028" started-at="2019-02-05T16:13:11Z" finished-at="2019-02-05T16:13:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_valid()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testUserLogin_valid()[pri:1, instance:sprint0.UserLogin@5ace1ed4]" name="testUserLogin_valid" duration-ms="11229" started-at="2019-02-05T16:13:18Z" finished-at="2019-02-05T16:13:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin_valid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="afterTest" is-config="true" duration-ms="81" started-at="2019-02-05T16:13:29Z" finished-at="2019-02-05T16:13:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLogin_valid status=SUCCESS method=UserLogin.testUserLogin_valid()[pri:1, instance:sprint0.UserLogin@5ace1ed4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_valid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="beforeMethod" is-config="true" duration-ms="5196" started-at="2019-02-05T16:13:31Z" finished-at="2019-02-05T16:13:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4]" name="testUserLogin_inValid" duration-ms="1089" started-at="2019-02-05T16:13:36Z" data-provider="LoginData" finished-at="2019-02-05T16:13:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin_inValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="afterTest" is-config="true" duration-ms="73" started-at="2019-02-05T16:13:37Z" finished-at="2019-02-05T16:13:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLogin_inValid status=SUCCESS method=UserLogin.testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="beforeMethod" is-config="true" duration-ms="4584" started-at="2019-02-05T16:13:37Z" finished-at="2019-02-05T16:13:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4]" name="testUserLogin_inValid" duration-ms="885" started-at="2019-02-05T16:13:42Z" data-provider="LoginData" finished-at="2019-02-05T16:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin_inValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="afterTest" is-config="true" duration-ms="78" started-at="2019-02-05T16:13:43Z" finished-at="2019-02-05T16:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLogin_inValid status=SUCCESS method=UserLogin.testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="beforeMethod" is-config="true" duration-ms="5496" started-at="2019-02-05T16:13:43Z" finished-at="2019-02-05T16:13:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4]" name="testUserLogin_inValid" duration-ms="1657" started-at="2019-02-05T16:13:48Z" data-provider="LoginData" finished-at="2019-02-05T16:13:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234344444556660]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[435365464576577657657]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin_inValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="afterTest" is-config="true" duration-ms="74" started-at="2019-02-05T16:13:50Z" finished-at="2019-02-05T16:13:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLogin_inValid status=SUCCESS method=UserLogin.testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="beforeMethod" is-config="true" duration-ms="5635" started-at="2019-02-05T16:13:50Z" finished-at="2019-02-05T16:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4]" name="testUserLogin_inValid" duration-ms="2270" started-at="2019-02-05T16:13:56Z" data-provider="LoginData" finished-at="2019-02-05T16:13:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dsfsafgsagfdsfgsdkfgdsksjggfdsgdgfdgfdfngfhgfhfhgfhgfhjghjgfhjgfjhgjgfjhgjhgjhgdtrytrytrvcgfhfg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fdlkgfdhjghdsflkjgfdhjgfdghlfdhfdglkhfdsdsllsgfdgsfdgfdsgfdgfdfdggfhfhgfh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin_inValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="afterTest" is-config="true" duration-ms="78" started-at="2019-02-05T16:13:58Z" finished-at="2019-02-05T16:13:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLogin_inValid status=SUCCESS method=UserLogin.testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="beforeMethod" is-config="true" duration-ms="6477" started-at="2019-02-05T16:13:58Z" finished-at="2019-02-05T16:14:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4]" name="testUserLogin_inValid" duration-ms="1999" started-at="2019-02-05T16:14:04Z" data-provider="LoginData" finished-at="2019-02-05T16:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[^&$*(%&^)(*^(*&)(^&]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[*%*(&^(^(*^(*^(*^(*^]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin_inValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:14:06Z" finished-at="2019-02-05T16:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserLogin_inValid status=SUCCESS method=UserLogin.testUserLogin_inValid(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.UserLogin@5ace1ed4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.UserLogin.testUserLogin_inValid(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.UserLogin@5ace1ed4]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:14:06Z" finished-at="2019-02-05T16:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.UserLogin -->
    </test> <!-- exampletest1 -->
    <test name="exampletest2" duration-ms="578198" started-at="2019-02-05T16:14:08Z" finished-at="2019-02-05T16:23:46Z">
      <class name="sprint0.EmployessAddEmployee">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeTest" is-config="true" duration-ms="17" started-at="2019-02-05T16:14:08Z" finished-at="2019-02-05T16:14:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="7271" started-at="2019-02-05T16:14:08Z" finished-at="2019-02-05T16:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserValid" duration-ms="25641" started-at="2019-02-05T16:14:15Z" data-provider="EmployeeData" finished-at="2019-02-05T16:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Martin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801012]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101231]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Asian American]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Work Permit Holder]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[SSN000001]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[10201012]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[JAMES]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[DL1010101]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Administrator]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[JAMESMARTIN]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[ROOP MAHEL]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[PREM GALLI]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[MARATHON]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Massachusetts]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[46746]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[4538753857]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[5479347589]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[9348958958]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[james@gmail.com]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[martin@gmail.com]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[Taylor Holmes]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[Gary Ruth]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Cynthia Roger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="88" started-at="2019-02-05T16:14:41Z" finished-at="2019-02-05T16:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserValid status=SUCCESS method=EmployessAddEmployee.testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="6527" started-at="2019-02-05T16:14:41Z" finished-at="2019-02-05T16:14:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserValid" duration-ms="26455" started-at="2019-02-05T16:14:48Z" data-provider="EmployeeData" finished-at="2019-02-05T16:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801013]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101232]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Asian American]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Work Permit Holder]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[SSN000002]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[10201013]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[JAMES]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[DL1010102]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Administrator]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[JAMESMARTIN]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[ROOP MAHEL]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[PREM GALLI]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[MARATHON]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Massachusetts]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[46747]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[4538753857]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[5479347589]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[9348958958]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[Nazia@gmail.com]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[Nazia@gmail.com]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[Taylor Holmes]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[Gary Ruth]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Cynthia Roger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="88" started-at="2019-02-05T16:15:14Z" finished-at="2019-02-05T16:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserValid status=SUCCESS method=EmployessAddEmployee.testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="6355" started-at="2019-02-05T16:15:14Z" finished-at="2019-02-05T16:15:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserValid" duration-ms="22668" started-at="2019-02-05T16:15:20Z" data-provider="EmployeeData" finished-at="2019-02-05T16:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801014]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101233]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Asian American]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Work Permit Holder]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[SSN000003]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[10201014]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[JAMES]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[DL1010103]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Administrator]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[JAMESMARTIN]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[ROOP MAHEL]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[PREM GALLI]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[MARATHON]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Massachusetts]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[46748]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[4538753857]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[5479347589]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[9348958958]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[Laila@gmail.com]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[Laila@gmail.com]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[Taylor Holmes]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[Gary Ruth]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Cynthia Roger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="80" started-at="2019-02-05T16:15:43Z" finished-at="2019-02-05T16:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserValid status=SUCCESS method=EmployessAddEmployee.testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="6768" started-at="2019-02-05T16:15:43Z" finished-at="2019-02-05T16:15:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserValid" duration-ms="23398" started-at="2019-02-05T16:15:50Z" data-provider="EmployeeData" finished-at="2019-02-05T16:16:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001004]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Oliver]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Olives]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801015]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101234]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Asian American]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Work Permit Holder]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[SSN000004]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[10201015]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[JAMES]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[DL1010104]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Administrator]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[JAMESMARTIN]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[ROOP MAHEL]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[PREM GALLI]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[MARATHON]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Massachusetts]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[46749]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[4538753857]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[5479347589]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[9348958958]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[Martin@gmail.com]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[Martin@gmail.com]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[Taylor Holmes]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[Gary Ruth]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Cynthia Roger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="74" started-at="2019-02-05T16:16:13Z" finished-at="2019-02-05T16:16:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserValid status=SUCCESS method=EmployessAddEmployee.testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="7080" started-at="2019-02-05T16:16:13Z" finished-at="2019-02-05T16:16:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserValid" duration-ms="23805" started-at="2019-02-05T16:16:21Z" data-provider="EmployeeData" finished-at="2019-02-05T16:16:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bruce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Willis]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801016]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101235]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Asian American]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Work Permit Holder]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[SSN000005]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[10201016]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[JAMES]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[DL1010105]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Administrator]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[JAMESMARTIN]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[ROOP MAHEL]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[PREM GALLI]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[MARATHON]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Massachusetts]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[46750]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[4538753857]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[5479347589]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[9348958958]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[Oliver@gmail.com]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[Oliver@gmail.com]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[Taylor Holmes]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[Gary Ruth]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Cynthia Roger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="80" started-at="2019-02-05T16:16:44Z" finished-at="2019-02-05T16:16:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserValid status=SUCCESS method=EmployessAddEmployee.testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="6255" started-at="2019-02-05T16:16:44Z" finished-at="2019-02-05T16:16:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserValid" duration-ms="27206" started-at="2019-02-05T16:16:51Z" data-provider="EmployeeData" finished-at="2019-02-05T16:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Martin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801017]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101236]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Asian American]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Work Permit Holder]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[SSN000006]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[10201017]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[JAMES]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[DL1010106]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Administrator]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[JAMESMARTIN]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[ROOP MAHEL]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[PREM GALLI]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[MARATHON]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Massachusetts]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[46751]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[4538753857]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[5479347589]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[9348958958]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[Bruce@gmail.com]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[Bruce@gmail.com]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[Taylor Holmes]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[Gary Ruth]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Cynthia Roger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="76" started-at="2019-02-05T16:17:18Z" finished-at="2019-02-05T16:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserValid status=SUCCESS method=EmployessAddEmployee.testAddUserValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="6225" started-at="2019-02-05T16:17:18Z" finished-at="2019-02-05T16:17:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserDuplicate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserDuplicate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserDuplicate" duration-ms="25515" started-at="2019-02-05T16:17:25Z" data-provider="EmployeeDuplicateData" finished-at="2019-02-05T16:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Martin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801012]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101231]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Asian American]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Work Permit Holder]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[SSN000001]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[10201012]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[JAMES]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[DL1010101]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Administrator]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[JAMESMARTIN]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[ROOP MAHEL]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[PREM GALLI]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[MARATHON]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Massachusetts]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[46746]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[4538753857]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[5479347589]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[9348958958]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[james@gmail.com]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[martin@gmail.com]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20121212]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[Taylor Holmes]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[Gary Ruth]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Cynthia Roger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserDuplicate -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="80" started-at="2019-02-05T16:17:50Z" finished-at="2019-02-05T16:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserDuplicate status=SUCCESS method=EmployessAddEmployee.testAddUserDuplicate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserDuplicate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="8095" started-at="2019-02-05T16:17:50Z" finished-at="2019-02-05T16:17:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="24832" started-at="2019-02-05T16:17:59Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IND0001002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="76" started-at="2019-02-05T16:18:23Z" finished-at="2019-02-05T16:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="4937" started-at="2019-02-05T16:18:23Z" finished-at="2019-02-05T16:18:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="20349" started-at="2019-02-05T16:18:28Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:18:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[JANE]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="74" started-at="2019-02-05T16:18:49Z" finished-at="2019-02-05T16:18:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="5133" started-at="2019-02-05T16:18:49Z" finished-at="2019-02-05T16:18:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="20866" started-at="2019-02-05T16:18:54Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:19:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[AUSTINE]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="74" started-at="2019-02-05T16:19:15Z" finished-at="2019-02-05T16:19:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="4815" started-at="2019-02-05T16:19:15Z" finished-at="2019-02-05T16:19:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="20735" started-at="2019-02-05T16:19:20Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:19:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:19:40Z" finished-at="2019-02-05T16:19:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="5775" started-at="2019-02-05T16:19:41Z" finished-at="2019-02-05T16:19:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="23690" started-at="2019-02-05T16:19:46Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[19801021]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="72" started-at="2019-02-05T16:20:10Z" finished-at="2019-02-05T16:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="7506" started-at="2019-02-05T16:20:10Z" finished-at="2019-02-05T16:20:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="20873" started-at="2019-02-05T16:20:18Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:20:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="76" started-at="2019-02-05T16:20:38Z" finished-at="2019-02-05T16:20:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="4899" started-at="2019-02-05T16:20:39Z" finished-at="2019-02-05T16:20:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="19789" started-at="2019-02-05T16:20:43Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:21:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="81" started-at="2019-02-05T16:21:03Z" finished-at="2019-02-05T16:21:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="4824" started-at="2019-02-05T16:21:03Z" finished-at="2019-02-05T16:21:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="19046" started-at="2019-02-05T16:21:08Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:21:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="74" started-at="2019-02-05T16:21:27Z" finished-at="2019-02-05T16:21:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="5506" started-at="2019-02-05T16:21:27Z" finished-at="2019-02-05T16:21:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="19369" started-at="2019-02-05T16:21:33Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:21:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="72" started-at="2019-02-05T16:21:52Z" finished-at="2019-02-05T16:21:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="4915" started-at="2019-02-05T16:21:52Z" finished-at="2019-02-05T16:21:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="20064" started-at="2019-02-05T16:21:57Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="74" started-at="2019-02-05T16:22:17Z" finished-at="2019-02-05T16:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="6488" started-at="2019-02-05T16:22:17Z" finished-at="2019-02-05T16:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="23482" started-at="2019-02-05T16:22:24Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:22:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[20101226]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="72" started-at="2019-02-05T16:22:47Z" finished-at="2019-02-05T16:22:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="6989" started-at="2019-02-05T16:22:47Z" finished-at="2019-02-05T16:22:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="22687" started-at="2019-02-05T16:22:54Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="72" started-at="2019-02-05T16:23:17Z" finished-at="2019-02-05T16:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="beforeMethod" is-config="true" duration-ms="5420" started-at="2019-02-05T16:23:17Z" finished-at="2019-02-05T16:23:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="testAddUserInvalidData" duration-ms="23195" started-at="2019-02-05T16:23:22Z" data-provider="EmployeeInvalidData" finished-at="2019-02-05T16:23:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Divorced]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Part Time Permanent]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[None]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUserInvalidData -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="78" started-at="2019-02-05T16:23:46Z" finished-at="2019-02-05T16:23:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddUserInvalidData status=SUCCESS method=EmployessAddEmployee.testAddUserInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:sprint0.EmployessAddEmployee@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployessAddEmployee.testAddUserInvalidData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.EmployessAddEmployee@15aab8c6]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:23:46Z" finished-at="2019-02-05T16:23:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.EmployessAddEmployee -->
    </test> <!-- exampletest2 -->
    <test name="exampletest3" duration-ms="34665" started-at="2019-02-05T16:23:48Z" finished-at="2019-02-05T16:24:22Z">
      <class name="sprint0.EmployeeLoginAs">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.EmployeeLoginAs@24fcf36f]" name="beforeTest" is-config="true" duration-ms="18" started-at="2019-02-05T16:23:48Z" finished-at="2019-02-05T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeLoginAs@24fcf36f]" name="beforeMethod" is-config="true" duration-ms="5580" started-at="2019-02-05T16:23:48Z" finished-at="2019-02-05T16:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeLoginAs.testLoginAsValid(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLoginAsValid(java.lang.String)[pri:1, instance:sprint0.EmployeeLoginAs@24fcf36f]" name="testLoginAsValid" duration-ms="28772" started-at="2019-02-05T16:23:54Z" data-provider="EmpFirstNameSearchData" finished-at="2019-02-05T16:24:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginAsValid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeLoginAs@24fcf36f]" name="afterTest" is-config="true" duration-ms="77" started-at="2019-02-05T16:24:22Z" finished-at="2019-02-05T16:24:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginAsValid status=SUCCESS method=EmployeeLoginAs.testLoginAsValid(java.lang.String)[pri:1, instance:sprint0.EmployeeLoginAs@24fcf36f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeLoginAs.testLoginAsValid(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.EmployeeLoginAs@24fcf36f]" name="afterTest" is-config="true" duration-ms="1" started-at="2019-02-05T16:24:22Z" finished-at="2019-02-05T16:24:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.EmployeeLoginAs -->
    </test> <!-- exampletest3 -->
    <test name="exampletest4" duration-ms="80054" started-at="2019-02-05T16:24:24Z" finished-at="2019-02-05T16:25:44Z">
      <class name="sprint0.EmployeeHomeFilter">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="beforeTest" is-config="true" duration-ms="20" started-at="2019-02-05T16:24:24Z" finished-at="2019-02-05T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="beforeMethod" is-config="true" duration-ms="4991" started-at="2019-02-05T16:24:24Z" finished-at="2019-02-05T16:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeHomeFilter.testFilterJobTitle(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testFilterJobTitle(java.lang.String)[pri:1, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="testFilterJobTitle" duration-ms="21269" started-at="2019-02-05T16:24:29Z" data-provider="SearchJobTitleData" finished-at="2019-02-05T16:24:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterJobTitle -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:24:50Z" finished-at="2019-02-05T16:24:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFilterJobTitle status=SUCCESS method=EmployeeHomeFilter.testFilterJobTitle(java.lang.String)[pri:1, instance:sprint0.EmployeeHomeFilter@4bb33f74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeHomeFilter.testFilterJobTitle(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="beforeMethod" is-config="true" duration-ms="4949" started-at="2019-02-05T16:24:51Z" finished-at="2019-02-05T16:24:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeHomeFilter.testFilterDepartment(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testFilterDepartment(java.lang.String)[pri:2, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="testFilterDepartment" duration-ms="22339" started-at="2019-02-05T16:24:55Z" data-provider="SearchDepartmentData" finished-at="2019-02-05T16:25:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Head Office]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterDepartment -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:25:18Z" finished-at="2019-02-05T16:25:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFilterDepartment status=SUCCESS method=EmployeeHomeFilter.testFilterDepartment(java.lang.String)[pri:2, instance:sprint0.EmployeeHomeFilter@4bb33f74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeHomeFilter.testFilterDepartment(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="beforeMethod" is-config="true" duration-ms="5977" started-at="2019-02-05T16:25:18Z" finished-at="2019-02-05T16:25:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeHomeFilter.testFilterSupervisor(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testFilterSupervisor(java.lang.String)[pri:3, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="testFilterSupervisor" duration-ms="19778" started-at="2019-02-05T16:25:24Z" data-provider="SearchSupervisorData" finished-at="2019-02-05T16:25:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IceHrm Employee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSupervisor -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="afterTest" is-config="true" duration-ms="78" started-at="2019-02-05T16:25:44Z" finished-at="2019-02-05T16:25:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFilterSupervisor status=SUCCESS method=EmployeeHomeFilter.testFilterSupervisor(java.lang.String)[pri:3, instance:sprint0.EmployeeHomeFilter@4bb33f74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeHomeFilter.testFilterSupervisor(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.EmployeeHomeFilter@4bb33f74]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:25:44Z" finished-at="2019-02-05T16:25:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.EmployeeHomeFilter -->
    </test> <!-- exampletest4 -->
    <test name="exampletest5" duration-ms="84551" started-at="2019-02-05T16:25:45Z" finished-at="2019-02-05T16:27:10Z">
      <class name="sprint0.EmployeeSearch">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="beforeTest" is-config="true" duration-ms="13" started-at="2019-02-05T16:25:45Z" finished-at="2019-02-05T16:25:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="beforeMethod" is-config="true" duration-ms="5834" started-at="2019-02-05T16:25:45Z" finished-at="2019-02-05T16:25:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeSearch.testSearchName(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSearchName(java.lang.String)[pri:1, instance:sprint0.EmployeeSearch@4d5b6aac]" name="testSearchName" duration-ms="21239" started-at="2019-02-05T16:25:51Z" data-provider="EmpFirstNameSearchData" finished-at="2019-02-05T16:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchName -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="afterTest" is-config="true" duration-ms="72" started-at="2019-02-05T16:26:12Z" finished-at="2019-02-05T16:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchName status=SUCCESS method=EmployeeSearch.testSearchName(java.lang.String)[pri:1, instance:sprint0.EmployeeSearch@4d5b6aac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeSearch.testSearchName(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="beforeMethod" is-config="true" duration-ms="7235" started-at="2019-02-05T16:26:12Z" finished-at="2019-02-05T16:26:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeSearch.testSearchLastname(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSearchLastname(java.lang.String)[pri:2, instance:sprint0.EmployeeSearch@4d5b6aac]" name="testSearchLastname" duration-ms="22809" started-at="2019-02-05T16:26:20Z" data-provider="EmpLastNameSearchData" finished-at="2019-02-05T16:26:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Martin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchLastname -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="afterTest" is-config="true" duration-ms="79" started-at="2019-02-05T16:26:42Z" finished-at="2019-02-05T16:26:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchLastname status=SUCCESS method=EmployeeSearch.testSearchLastname(java.lang.String)[pri:2, instance:sprint0.EmployeeSearch@4d5b6aac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeSearch.testSearchLastname(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="beforeMethod" is-config="true" duration-ms="5717" started-at="2019-02-05T16:26:43Z" finished-at="2019-02-05T16:26:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeSearch.testSearchInvalid(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSearchInvalid(java.lang.String)[pri:3, instance:sprint0.EmployeeSearch@4d5b6aac]" name="testSearchInvalid" duration-ms="21124" started-at="2019-02-05T16:26:48Z" data-provider="EmpInvalidSearchData" finished-at="2019-02-05T16:27:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[xx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchInvalid -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="afterTest" is-config="true" duration-ms="79" started-at="2019-02-05T16:27:09Z" finished-at="2019-02-05T16:27:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchInvalid status=SUCCESS method=EmployeeSearch.testSearchInvalid(java.lang.String)[pri:3, instance:sprint0.EmployeeSearch@4d5b6aac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeSearch.testSearchInvalid(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.EmployeeSearch@4d5b6aac]" name="afterTest" is-config="true" duration-ms="1" started-at="2019-02-05T16:27:10Z" finished-at="2019-02-05T16:27:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.EmployeeSearch -->
    </test> <!-- exampletest5 -->
    <test name="exampletest6" duration-ms="47450" started-at="2019-02-05T16:27:11Z" finished-at="2019-02-05T16:27:59Z">
      <class name="sprint0.EmployeeSearchEdit">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.EmployeeSearchEdit@28f3b248]" name="beforeTest" is-config="true" duration-ms="25" started-at="2019-02-05T16:27:11Z" finished-at="2019-02-05T16:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeSearchEdit@28f3b248]" name="beforeMethod" is-config="true" duration-ms="5358" started-at="2019-02-05T16:27:11Z" finished-at="2019-02-05T16:27:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeSearchEdit.testEditEmployeeNote(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testEditEmployeeNote(java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployeeSearchEdit@28f3b248]" name="testEditEmployeeNote" duration-ms="41839" started-at="2019-02-05T16:27:17Z" data-provider="EmpFirstNameSearchData" finished-at="2019-02-05T16:27:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Note]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditEmployeeNote -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeSearchEdit@28f3b248]" name="afterTest" is-config="true" duration-ms="86" started-at="2019-02-05T16:27:59Z" finished-at="2019-02-05T16:27:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditEmployeeNote status=SUCCESS method=EmployeeSearchEdit.testEditEmployeeNote(java.lang.String, java.lang.String)[pri:1, instance:sprint0.EmployeeSearchEdit@28f3b248] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeSearchEdit.testEditEmployeeNote(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.EmployeeSearchEdit@28f3b248]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:27:59Z" finished-at="2019-02-05T16:27:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.EmployeeSearchEdit -->
    </test> <!-- exampletest6 -->
    <test name="exampletest7" duration-ms="67359" started-at="2019-02-05T16:28:00Z" finished-at="2019-02-05T16:29:08Z">
      <class name="sprint0.EmployeeView">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.EmployeeView@67c33749]" name="beforeTest" is-config="true" duration-ms="22" started-at="2019-02-05T16:28:00Z" finished-at="2019-02-05T16:28:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeView@67c33749]" name="beforeMethod" is-config="true" duration-ms="5163" started-at="2019-02-05T16:28:00Z" finished-at="2019-02-05T16:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeView.testEmployeeView(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testEmployeeView(java.lang.String)[pri:1, instance:sprint0.EmployeeView@67c33749]" name="testEmployeeView" duration-ms="21865" started-at="2019-02-05T16:28:06Z" data-provider="EmpFirstNameSearchData" finished-at="2019-02-05T16:28:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeView -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeView@67c33749]" name="afterTest" is-config="true" duration-ms="73" started-at="2019-02-05T16:28:28Z" finished-at="2019-02-05T16:28:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmployeeView status=SUCCESS method=EmployeeView.testEmployeeView(java.lang.String)[pri:1, instance:sprint0.EmployeeView@67c33749] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeView.testEmployeeView(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeView@67c33749]" name="beforeMethod" is-config="true" duration-ms="5528" started-at="2019-02-05T16:28:28Z" finished-at="2019-02-05T16:28:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeView.testProfileImageUpload(java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testProfileImageUpload(java.lang.String)[pri:2, instance:sprint0.EmployeeView@67c33749]" name="testProfileImageUpload" duration-ms="34442" started-at="2019-02-05T16:28:33Z" data-provider="EmpFirstNameSearchData" finished-at="2019-02-05T16:29:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProfileImageUpload -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeView@67c33749]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:29:08Z" finished-at="2019-02-05T16:29:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProfileImageUpload status=SUCCESS method=EmployeeView.testProfileImageUpload(java.lang.String)[pri:2, instance:sprint0.EmployeeView@67c33749] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeView.testProfileImageUpload(java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.EmployeeView@67c33749]" name="afterTest" is-config="true" duration-ms="1" started-at="2019-02-05T16:29:08Z" finished-at="2019-02-05T16:29:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.EmployeeView -->
    </test> <!-- exampletest7 -->
    <test name="exampletest8" duration-ms="34127" started-at="2019-02-05T16:29:09Z" finished-at="2019-02-05T16:29:43Z">
      <class name="sprint0.EmployeeTerminateEmployee">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.EmployeeTerminateEmployee@505fc5a4]" name="beforeTest" is-config="true" duration-ms="159" started-at="2019-02-05T16:29:09Z" finished-at="2019-02-05T16:29:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.EmployeeTerminateEmployee@505fc5a4]" name="beforeMethod" is-config="true" duration-ms="5203" started-at="2019-02-05T16:29:09Z" finished-at="2019-02-05T16:29:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.EmployeeTerminateEmployee.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.EmployeeTerminateEmployee@505fc5a4]" name="testTerminateEmployee" duration-ms="28216" started-at="2019-02-05T16:29:15Z" data-provider="EmpFirstNameSearchData" finished-at="2019-02-05T16:29:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.EmployeeTerminateEmployee.testTerminateEmployee(EmployeeTerminateEmployee.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.EmployeeTerminateEmployee@505fc5a4]" name="afterTest" is-config="true" duration-ms="414" started-at="2019-02-05T16:29:43Z" finished-at="2019-02-05T16:29:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=FAILURE method=EmployeeTerminateEmployee.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.EmployeeTerminateEmployee@505fc5a4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.EmployeeTerminateEmployee.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_21_59_43.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.EmployeeTerminateEmployee@505fc5a4]" name="afterTest" is-config="true" duration-ms="1" started-at="2019-02-05T16:29:43Z" finished-at="2019-02-05T16:29:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.EmployeeTerminateEmployee -->
    </test> <!-- exampletest8 -->
    <test name="exampletest9" duration-ms="439196" started-at="2019-02-05T16:29:45Z" finished-at="2019-02-05T16:37:04Z">
      <class name="sprint0.DeactivateEmployee">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeTest" is-config="true" duration-ms="15" started-at="2019-02-05T16:29:45Z" finished-at="2019-02-05T16:29:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="4963" started-at="2019-02-05T16:29:45Z" finished-at="2019-02-05T16:29:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8]" name="testDeactivateEmployee" duration-ms="25155" started-at="2019-02-05T16:29:50Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:30:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="70" started-at="2019-02-05T16:30:15Z" finished-at="2019-02-05T16:30:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="5954" started-at="2019-02-05T16:30:15Z" finished-at="2019-02-05T16:30:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8]" name="testDeactivateEmployee" duration-ms="24596" started-at="2019-02-05T16:30:21Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:30:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19701010]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:30:45Z" finished-at="2019-02-05T16:30:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="4790" started-at="2019-02-05T16:30:45Z" finished-at="2019-02-05T16:30:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8]" name="testDeactivateEmployee" duration-ms="20730" started-at="2019-02-05T16:30:50Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Oliver]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Widowed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="72" started-at="2019-02-05T16:31:11Z" finished-at="2019-02-05T16:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="5360" started-at="2019-02-05T16:31:11Z" finished-at="2019-02-05T16:31:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8]" name="testDeactivateEmployee" duration-ms="21560" started-at="2019-02-05T16:31:16Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bruce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Part Time Internship]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="71" started-at="2019-02-05T16:31:38Z" finished-at="2019-02-05T16:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testDeactivateEmployee(java.lang.String, java.lang.String)[pri:1, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testDeactivateEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="4608" started-at="2019-02-05T16:31:38Z" finished-at="2019-02-05T16:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8]" name="testEditDeactivateEmployee" duration-ms="21772" started-at="2019-02-05T16:31:43Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:32:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="77" started-at="2019-02-05T16:32:05Z" finished-at="2019-02-05T16:32:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="7970" started-at="2019-02-05T16:32:05Z" finished-at="2019-02-05T16:32:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8]" name="testEditDeactivateEmployee" duration-ms="26920" started-at="2019-02-05T16:32:13Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19701010]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="84" started-at="2019-02-05T16:32:39Z" finished-at="2019-02-05T16:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="4804" started-at="2019-02-05T16:32:40Z" finished-at="2019-02-05T16:32:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8]" name="testEditDeactivateEmployee" duration-ms="23016" started-at="2019-02-05T16:32:44Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Oliver]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Widowed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="71" started-at="2019-02-05T16:33:07Z" finished-at="2019-02-05T16:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="5195" started-at="2019-02-05T16:33:07Z" finished-at="2019-02-05T16:33:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8]" name="testEditDeactivateEmployee" duration-ms="23869" started-at="2019-02-05T16:33:13Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:33:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bruce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Part Time Internship]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditDeactivateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:33:37Z" finished-at="2019-02-05T16:33:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditDeactivateEmployee status=SUCCESS method=DeactivateEmployee.testEditDeactivateEmployee(java.lang.String, java.lang.String)[pri:2, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testEditDeactivateEmployee(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="4987" started-at="2019-02-05T16:33:37Z" finished-at="2019-02-05T16:33:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8]" name="testSearchName" duration-ms="18888" started-at="2019-02-05T16:33:42Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:34:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchName -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="71" started-at="2019-02-05T16:34:01Z" finished-at="2019-02-05T16:34:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchName status=SUCCESS method=DeactivateEmployee.testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="7705" started-at="2019-02-05T16:34:01Z" finished-at="2019-02-05T16:34:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8]" name="testSearchName" duration-ms="19719" started-at="2019-02-05T16:34:08Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:34:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19701010]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchName -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="72" started-at="2019-02-05T16:34:28Z" finished-at="2019-02-05T16:34:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchName status=SUCCESS method=DeactivateEmployee.testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="5801" started-at="2019-02-05T16:34:28Z" finished-at="2019-02-05T16:34:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8]" name="testSearchName" duration-ms="20403" started-at="2019-02-05T16:34:34Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:34:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Oliver]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Widowed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchName -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="73" started-at="2019-02-05T16:34:54Z" finished-at="2019-02-05T16:34:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchName status=SUCCESS method=DeactivateEmployee.testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="4836" started-at="2019-02-05T16:34:54Z" finished-at="2019-02-05T16:34:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8]" name="testSearchName" duration-ms="21958" started-at="2019-02-05T16:34:59Z" data-provider="TerminateEmpData" finished-at="2019-02-05T16:35:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bruce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Part Time Internship]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchName -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="70" started-at="2019-02-05T16:35:21Z" finished-at="2019-02-05T16:35:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchName status=SUCCESS method=DeactivateEmployee.testSearchName(java.lang.String, java.lang.String)[pri:3, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testSearchName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="5291" started-at="2019-02-05T16:35:21Z" finished-at="2019-02-05T16:35:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8]" name="testRestoreEmployee" duration-ms="21535" started-at="2019-02-05T16:35:27Z" data-provider="TerminateEmpData" depends-on-methods="sprint0.DeactivateEmployee.testDeactivateEmployee" finished-at="2019-02-05T16:35:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Stuart]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestoreEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:35:48Z" finished-at="2019-02-05T16:35:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestoreEmployee status=SUCCESS method=DeactivateEmployee.testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="4597" started-at="2019-02-05T16:35:48Z" finished-at="2019-02-05T16:35:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8]" name="testRestoreEmployee" duration-ms="19988" started-at="2019-02-05T16:35:53Z" data-provider="TerminateEmpData" depends-on-methods="sprint0.DeactivateEmployee.testDeactivateEmployee" finished-at="2019-02-05T16:36:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19701010]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestoreEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="73" started-at="2019-02-05T16:36:13Z" finished-at="2019-02-05T16:36:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestoreEmployee status=SUCCESS method=DeactivateEmployee.testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="5500" started-at="2019-02-05T16:36:13Z" finished-at="2019-02-05T16:36:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8]" name="testRestoreEmployee" duration-ms="19366" started-at="2019-02-05T16:36:18Z" data-provider="TerminateEmpData" depends-on-methods="sprint0.DeactivateEmployee.testDeactivateEmployee" finished-at="2019-02-05T16:36:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Oliver]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Widowed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestoreEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="76" started-at="2019-02-05T16:36:38Z" finished-at="2019-02-05T16:36:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestoreEmployee status=SUCCESS method=DeactivateEmployee.testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="beforeMethod" is-config="true" duration-ms="5055" started-at="2019-02-05T16:36:38Z" finished-at="2019-02-05T16:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8]" name="testRestoreEmployee" duration-ms="20736" started-at="2019-02-05T16:36:43Z" data-provider="TerminateEmpData" depends-on-methods="sprint0.DeactivateEmployee.testDeactivateEmployee" finished-at="2019-02-05T16:37:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bruce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Part Time Internship]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestoreEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="78" started-at="2019-02-05T16:37:04Z" finished-at="2019-02-05T16:37:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestoreEmployee status=SUCCESS method=DeactivateEmployee.testRestoreEmployee(java.lang.String, java.lang.String)[pri:4, instance:sprint0.DeactivateEmployee@71def8f8] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivateEmployee.testRestoreEmployee(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.DeactivateEmployee@71def8f8]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:37:04Z" finished-at="2019-02-05T16:37:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.DeactivateEmployee -->
    </test> <!-- exampletest9 -->
    <test name="exampletest10" duration-ms="22011" started-at="2019-02-05T16:37:06Z" finished-at="2019-02-05T16:37:28Z">
      <class name="sprint0.DeactivatedEmployeeFilter">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.DeactivatedEmployeeFilter@28f2a10f]" name="beforeTest" is-config="true" duration-ms="13" started-at="2019-02-05T16:37:06Z" finished-at="2019-02-05T16:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivatedEmployeeFilter@28f2a10f]" name="beforeMethod" is-config="true" duration-ms="4588" started-at="2019-02-05T16:37:06Z" finished-at="2019-02-05T16:37:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeFilter.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeFilter@28f2a10f]" name="testTerminateEmployee" duration-ms="17255" started-at="2019-02-05T16:37:11Z" data-provider="SearchJobTitleData" finished-at="2019-02-05T16:37:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Product Manager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivatedEmployeeFilter@28f2a10f]" name="afterTest" is-config="true" duration-ms="74" started-at="2019-02-05T16:37:28Z" finished-at="2019-02-05T16:37:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=SUCCESS method=DeactivatedEmployeeFilter.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeFilter@28f2a10f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeFilter.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.DeactivatedEmployeeFilter@28f2a10f]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:37:28Z" finished-at="2019-02-05T16:37:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.DeactivatedEmployeeFilter -->
    </test> <!-- exampletest10 -->
    <test name="exampletest11" duration-ms="176165" started-at="2019-02-05T16:37:30Z" finished-at="2019-02-05T16:40:26Z">
      <class name="sprint0.DeactivatedEmployeeArchive">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="beforeTest" is-config="true" duration-ms="13" started-at="2019-02-05T16:37:30Z" finished-at="2019-02-05T16:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="beforeMethod" is-config="true" duration-ms="4783" started-at="2019-02-05T16:37:30Z" finished-at="2019-02-05T16:37:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="testTerminateEmployee" duration-ms="22719" started-at="2019-02-05T16:37:35Z" data-provider="ArchieveEmpData" finished-at="2019-02-05T16:37:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(DeactivatedEmployeeArchive.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="afterTest" is-config="true" duration-ms="386" started-at="2019-02-05T16:37:57Z" finished-at="2019-02-05T16:37:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=FAILURE method=DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_07_58.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="beforeMethod" is-config="true" duration-ms="5095" started-at="2019-02-05T16:37:58Z" finished-at="2019-02-05T16:38:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="testTerminateEmployee" duration-ms="23322" started-at="2019-02-05T16:38:03Z" data-provider="ArchieveEmpData" finished-at="2019-02-05T16:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(DeactivatedEmployeeArchive.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="afterTest" is-config="true" duration-ms="427" started-at="2019-02-05T16:38:26Z" finished-at="2019-02-05T16:38:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=FAILURE method=DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_08_27.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="beforeMethod" is-config="true" duration-ms="4212" started-at="2019-02-05T16:38:27Z" finished-at="2019-02-05T16:38:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="testTerminateEmployee" duration-ms="21905" started-at="2019-02-05T16:38:31Z" data-provider="ArchieveEmpData" finished-at="2019-02-05T16:38:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(DeactivatedEmployeeArchive.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="afterTest" is-config="true" duration-ms="435" started-at="2019-02-05T16:38:53Z" finished-at="2019-02-05T16:38:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=FAILURE method=DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_08_53.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="beforeMethod" is-config="true" duration-ms="4802" started-at="2019-02-05T16:38:53Z" finished-at="2019-02-05T16:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="testTerminateEmployee" duration-ms="25661" started-at="2019-02-05T16:38:58Z" data-provider="ArchieveEmpData" finished-at="2019-02-05T16:39:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Oliver]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(DeactivatedEmployeeArchive.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="afterTest" is-config="true" duration-ms="385" started-at="2019-02-05T16:39:24Z" finished-at="2019-02-05T16:39:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=FAILURE method=DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_09_24.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="beforeMethod" is-config="true" duration-ms="4151" started-at="2019-02-05T16:39:24Z" finished-at="2019-02-05T16:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="testTerminateEmployee" duration-ms="26709" started-at="2019-02-05T16:39:28Z" data-provider="ArchieveEmpData" finished-at="2019-02-05T16:39:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bruce]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(DeactivatedEmployeeArchive.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="afterTest" is-config="true" duration-ms="418" started-at="2019-02-05T16:39:55Z" finished-at="2019-02-05T16:39:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=FAILURE method=DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_09_55.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="beforeMethod" is-config="true" duration-ms="5713" started-at="2019-02-05T16:39:55Z" finished-at="2019-02-05T16:40:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="testTerminateEmployee" duration-ms="24523" started-at="2019-02-05T16:40:01Z" data-provider="ArchieveEmpData" finished-at="2019-02-05T16:40:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(DeactivatedEmployeeArchive.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployee -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="afterTest" is-config="true" duration-ms="379" started-at="2019-02-05T16:40:26Z" finished-at="2019-02-05T16:40:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployee status=FAILURE method=DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)[pri:1, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.DeactivatedEmployeeArchive.testTerminateEmployee(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployee2019_05_02_22_10_26.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.DeactivatedEmployeeArchive@2fb3536e]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:40:26Z" finished-at="2019-02-05T16:40:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.DeactivatedEmployeeArchive -->
    </test> <!-- exampletest11 -->
    <test name="exampletest12" duration-ms="27992" started-at="2019-02-05T16:40:28Z" finished-at="2019-02-05T16:40:56Z">
      <class name="sprint0.TerminatedEmployeeDownloadData">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.TerminatedEmployeeDownloadData@3f6b0be5]" name="beforeTest" is-config="true" duration-ms="11" started-at="2019-02-05T16:40:28Z" finished-at="2019-02-05T16:40:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.TerminatedEmployeeDownloadData@3f6b0be5]" name="beforeMethod" is-config="true" duration-ms="4693" started-at="2019-02-05T16:40:28Z" finished-at="2019-02-05T16:40:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeDownloadData.testTerminateEmployeeDataDownLoad(java.lang.String,java.lang.String) throws java.awt.AWTException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployeeDataDownLoad(java.lang.String, java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeDownloadData@3f6b0be5]" name="testTerminateEmployeeDataDownLoad" duration-ms="22837" started-at="2019-02-05T16:40:33Z" data-provider="EmployeeDataDownLoad" finished-at="2019-02-05T16:40:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jake]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[employee_42_Jake_Bruce.txt]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [File already exist] but found [File does not exist]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [File already exist] but found [File does not exist]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at sprint0.TerminatedEmployeeDownloadData.testTerminateEmployeeDataDownLoad(TerminatedEmployeeDownloadData.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployeeDataDownLoad -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.TerminatedEmployeeDownloadData@3f6b0be5]" name="afterTest" is-config="true" duration-ms="386" started-at="2019-02-05T16:40:56Z" finished-at="2019-02-05T16:40:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployeeDataDownLoad status=FAILURE method=TerminatedEmployeeDownloadData.testTerminateEmployeeDataDownLoad(java.lang.String, java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeDownloadData@3f6b0be5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeDownloadData.testTerminateEmployeeDataDownLoad(java.lang.String,java.lang.String) throws java.awt.AWTException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployeeDataDownLoad2019_05_02_22_10_56.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.TerminatedEmployeeDownloadData@3f6b0be5]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:40:56Z" finished-at="2019-02-05T16:40:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- sprint0.TerminatedEmployeeDownloadData -->
    </test> <!-- exampletest12 -->
    <test name="exampletest13" duration-ms="156126" started-at="2019-02-05T16:40:58Z" finished-at="2019-02-05T16:43:34Z">
      <class name="sprint0.TerminatedEmployeeData">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeSuite" is-config="true" duration-ms="30" started-at="2019-02-05T16:13:10Z" finished-at="2019-02-05T16:13:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeTest" is-config="true" duration-ms="5" started-at="2019-02-05T16:40:58Z" finished-at="2019-02-05T16:40:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeMethod" is-config="true" duration-ms="4714" started-at="2019-02-05T16:40:58Z" finished-at="2019-02-05T16:41:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="testTerminateEmployeeDelete" duration-ms="20028" started-at="2019-02-05T16:41:03Z" data-provider="ArchieveEmpDataDelete" finished-at="2019-02-05T16:41:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[James]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotVisibleException">
            <message>
              <![CDATA[element not interactable
  (Session info: headless chrome=71.0.3578.98)
  (Driver info: chromedriver=2.44.609545 (c2f88692e98ce7233d2df7c724465ecacfe74df5),platform=Mac OS X 10.14.2 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'mac.local', ip: 'fe80:0:0:0:416:4f24:fa75:517%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.2', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609545 (c2f88692e98ce7..., userDataDir: /var/folders/93/cv8d4r_j66b...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53407}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 66df5b468cfc8d3d8e04a016f29ec6b2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotVisibleException: element not interactable
  (Session info: headless chrome=71.0.3578.98)
  (Driver info: chromedriver=2.44.609545 (c2f88692e98ce7233d2df7c724465ecacfe74df5),platform=Mac OS X 10.14.2 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'mac.local', ip: 'fe80:0:0:0:416:4f24:fa75:517%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.2', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609545 (c2f88692e98ce7..., userDataDir: /var/folders/93/cv8d4r_j66b...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53407}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 66df5b468cfc8d3d8e04a016f29ec6b2
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sprint0.login.POM.EmployessEmployeesPagePOM.SelectEmployeeArchieveDelete(EmployessEmployeesPagePOM.java:615)
at sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(TerminatedEmployeeData.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotVisibleException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployeeDelete -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterTest" is-config="true" duration-ms="380" started-at="2019-02-05T16:41:23Z" finished-at="2019-02-05T16:41:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployeeDelete status=FAILURE method=TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployeeDelete2019_05_02_22_11_23.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeMethod" is-config="true" duration-ms="4301" started-at="2019-02-05T16:41:23Z" finished-at="2019-02-05T16:41:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="testTerminateEmployeeDelete" duration-ms="22259" started-at="2019-02-05T16:41:28Z" data-provider="ArchieveEmpDataDelete" finished-at="2019-02-05T16:41:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kale]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployeeDelete -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterTest" is-config="true" duration-ms="71" started-at="2019-02-05T16:41:50Z" finished-at="2019-02-05T16:41:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployeeDelete status=SUCCESS method=TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeMethod" is-config="true" duration-ms="6124" started-at="2019-02-05T16:41:50Z" finished-at="2019-02-05T16:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="testTerminateEmployeeDelete" duration-ms="22912" started-at="2019-02-05T16:41:56Z" data-provider="ArchieveEmpDataDelete" finished-at="2019-02-05T16:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zucchinni]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployeeDelete -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterTest" is-config="true" duration-ms="83" started-at="2019-02-05T16:42:19Z" finished-at="2019-02-05T16:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployeeDelete status=SUCCESS method=TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeMethod" is-config="true" duration-ms="4880" started-at="2019-02-05T16:42:19Z" finished-at="2019-02-05T16:42:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="testTerminateEmployeeDelete" duration-ms="22344" started-at="2019-02-05T16:42:24Z" data-provider="ArchieveEmpDataDelete" finished-at="2019-02-05T16:42:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Oliver]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployeeDelete -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:42:46Z" finished-at="2019-02-05T16:42:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployeeDelete status=SUCCESS method=TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeMethod" is-config="true" duration-ms="4691" started-at="2019-02-05T16:42:46Z" finished-at="2019-02-05T16:42:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="testTerminateEmployeeDelete" duration-ms="17427" started-at="2019-02-05T16:42:51Z" data-provider="ArchieveEmpDataDelete" finished-at="2019-02-05T16:43:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bruce]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotVisibleException">
            <message>
              <![CDATA[element not interactable
  (Session info: headless chrome=71.0.3578.98)
  (Driver info: chromedriver=2.44.609545 (c2f88692e98ce7233d2df7c724465ecacfe74df5),platform=Mac OS X 10.14.2 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'mac.local', ip: 'fe80:0:0:0:416:4f24:fa75:517%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.2', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609545 (c2f88692e98ce7..., userDataDir: /var/folders/93/cv8d4r_j66b...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53515}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 96abe5b070bb8fddadc94ad9bb994989]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotVisibleException: element not interactable
  (Session info: headless chrome=71.0.3578.98)
  (Driver info: chromedriver=2.44.609545 (c2f88692e98ce7233d2df7c724465ecacfe74df5),platform=Mac OS X 10.14.2 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'mac.local', ip: 'fe80:0:0:0:416:4f24:fa75:517%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.2', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609545 (c2f88692e98ce7..., userDataDir: /var/folders/93/cv8d4r_j66b...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53515}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 96abe5b070bb8fddadc94ad9bb994989
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sprint0.login.POM.EmployessEmployeesPagePOM.SelectEmployeeArchieveDelete(EmployessEmployeesPagePOM.java:615)
at sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(TerminatedEmployeeData.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotVisibleException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployeeDelete -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterTest" is-config="true" duration-ms="432" started-at="2019-02-05T16:43:09Z" finished-at="2019-02-05T16:43:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployeeDelete status=FAILURE method=TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Testcase Failure Screenshot saved at : file:/Users/manoj/Documents/GitHub/ICEHRM/Screenshots/testTerminateEmployeeDelete2019_05_02_22_13_09.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="beforeMethod" is-config="true" duration-ms="4953" started-at="2019-02-05T16:43:09Z" finished-at="2019-02-05T16:43:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hidden]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="testTerminateEmployeeDelete" duration-ms="20263" started-at="2019-02-05T16:43:14Z" data-provider="ArchieveEmpDataDelete" finished-at="2019-02-05T16:43:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTerminateEmployeeDelete -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterTest" is-config="true" duration-ms="75" started-at="2019-02-05T16:43:34Z" finished-at="2019-02-05T16:43:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTerminateEmployeeDelete status=SUCCESS method=TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)[pri:1, instance:sprint0.TerminatedEmployeeData@7e7be63f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void sprint0.TerminatedEmployeeData.testTerminateEmployeeDelete(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-02-05T16:43:34Z" finished-at="2019-02-05T16:43:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:sprint0.TerminatedEmployeeData@7e7be63f]" name="afterSuite" is-config="true" duration-ms="1" started-at="2019-02-05T16:43:37Z" finished-at="2019-02-05T16:43:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- sprint0.TerminatedEmployeeData -->
    </test> <!-- exampletest13 -->
  </suite> <!-- example suite 1 -->
</testng-results>
